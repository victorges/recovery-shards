name: Build and Release Binaries

on:
  push:
    tags:
      - 'v[0-9].[0-9].[0-9]*'
      - '[0-9].[0-9].[0-9]*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          # Exclude Windows ARM64 if not needed
          - goos: windows
            goarch: arm64

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Download dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          # Set output filename with extension based on OS
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT="shards-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
          else
            OUTPUT="shards-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}"
          fi

          # Build with version info
          make build OUTPUT=${OUTPUT}

          # Create checksum
          if [ "${{ matrix.goos }}" = "windows" ]; then
            sha256sum ${OUTPUT} > ${OUTPUT}.sha256
          else
            shasum -a 256 ${OUTPUT} > ${OUTPUT}.sha256
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shards-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            shards-*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            **/shards-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
